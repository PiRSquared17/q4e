#summary Frequently Asked Questions
#labels faq,Featured

= Frequently asked questions about Q for Eclipse =

== What can this Eclipse plugin do? ==

It will allow you to run Maven goals from the Eclipse IDE, create new Maven projects using archetypes, import Maven projects without any intermediate steps, view the dependencies of your project in a graph,... we will keep adding features with the time

== How do I install it? ==

Refer to [Installation]

== Why the plugin is not at the Eclipse Foundation? ==

A new project proposal has been approved at the Eclipse Foundation to add Q4E as an official Eclipse project.

The proposal is called [http://www.eclipse.org/proposals/iam/ Eclipse Integration for Apache Maven (Eclipse IAM)]  and is the first step to become a project.

Discussions about the creation will happen in the newsgroup at
 * server: news.eclipse.org
 * group: eclipse.technology.iam
 * [http://www.eclipse.org/newsportal/thread.php?group=eclipse.technology.iam Web interface]

The discussions will have as objective gathering the community interested in having the project in the Eclipse Foundation and finding two mentors from the [http://www.eclipse.org/org/foundation/council.php#architecture Eclipse Architecture Council]

When ready, we can go through the creation review process.


== What are the differences between this plugin and m2eclipse? ==

The objective of this plugin is to be part of the [http://www.eclipse.org Eclipse Foundation], for that reason the license is EPL and we are going to follow the foundation procedures. Thanks to the sponsorship of [http://www.devzuz.com DevZuz], an [http://www.eclipse.org/membership/showMember.php?member_id=824 Eclipse Strategic Developer Member] we are in a good position to achieve this goal. So far Q4E has been proposed as a Eclipse Foundation official project, [http://www.eclipse.org/proposals/iam Eclipse IAM].

Besides the objective, there are technical differences. While m2eclipse shows Maven output in a console, Q is based in events and will show them in an organized way that allows filtering by severity, search,... Functionality like the dependency graph, or creation of new projects using the archetype mechanism are only present in Q.

Also it's implemented in several modules with reusability and extension in mind so other people can develop their own plugins taking advantage of the functionality they need (see for instance [http://ramblingabout.wordpress.com/2007/09/02/candy-for-appfuse-will-be-under-extreme-refactoring/ Candy for Appfuse]).

In any case the underlying Maven libraries used for both plugins are the same (the Maven Embedder) and both plugin developers collaborate in its development.

You can also check a [http://docs.codehaus.org/display/MAVENUSER/Eclipse+Integration third-party comparison of m2eclipse and Q4E at Maven User's wiki]


== Can I run Maven 2.0.x or a different Maven installation with Q? ==

No. Q4E runs Maven in process, not forking a new jvm, so it uses the libraries included in Q4E.
Why? performance, event and error handling, simplicity... 
For instance, if you have a Maven project open in Eclipse but not installed in your repository Q4E will work wth it from the Eclispe workspace because we can intercept the calls in the Maven libraries.
Another example, if your build fails with any error we can build a meaningful message and add an error marker to Eclipse without having to parse the Maven standard and error output and figuring out what went wrong.


== Why the name Q? ==

Q, named after the [http://en.wikipedia.org/wiki/Q_(James_Bond) special agent Q] in the James Bond books and movies. No double meaning or anything like that, we are just James Bond fans ;)