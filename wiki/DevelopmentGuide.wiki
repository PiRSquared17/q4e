#summary Guide for developers of the project.
#labels Featured,Phase-Design

= Introduction =

We will cover the architecture of the project


= Slides =

[http://q4e.googlecode.com/svn/trunk/docs/Q.odp Introduction to Q]


= Architecture =

[http://q4e.googlecode.com/svn/trunk/docs/architecture.png]

The modules in italic are experimental

== Maven core Eclipse wrapper ==

 * org.devzuz.q.maven.core
  * Wraps the Maven Embedder API to add Eclipse specific operations
  * Adds functionality not currently present in the Maven Embedder

== JDT integration ==

 * org.devzuz.q.maven.jdt.core
  * Maven nature
  * Classpath container
 * org.devzuz.q.maven.jdt.ui
  * Enabel/Disable nature menu actions
  * Launch configuration
  * POM editor
  * Import project job
  * Project scanner

== User interface ==

 * org.devzuz.q.maven.ui
  * Menu actions for goals
  * Dependency graph
  * Repository indexer (should be elsewhere?)
  * Manage dependencies dialog
  * Archetype list dialog
  * Global/project preference pages
  * Maven event view
 * org.devzuz.q.maven.wizard
  * New Maven project from archetype wizard
  * Import wizard

== Feature and update site ==

 * org.devzuz.q.update
 * org.devzuz.q.feature

== Buckminster integration ==

 * org.devzuz.q.buckminster.maven


== Repository integration == 

APIs and code to integrate with Maven repositories

 * org.devzuz.q.repository.api
 * org.devzuz.q.repository.core
 * org.devzuz.q.repository.ui


== Third party libraries ==

Features and plugins created to use third party libraries

 * org.apache.maven.embedder
  * The maven embedder, allows to run Maven embedded inside Eclipse
 * org.devzuz.q.feature.maven
  * Feature that wraps the embedder
 * org.apache.commons.collections
  * Commons collections feature
 * org.prefuse
  * Prefuse library for graph visualization
 * org.prefuse.feature
  * Feature encapsulating Prefuse plugin

== Experimental ==

=== _Target platform provisioner_ ===

 * org.devzuz.q.maven.pde.targetplatform

=== _Eclipse Wagon_ ===

 * org.devzuz.q.maven.wagon

=== _ECF Provider_ ===

 * org.devzuz.q.ecf.provider.filetransfer



= License header =

{{{
/*
 * Copyright (c) 2007 DevZuz, Inc. (AKA Simula Labs, Inc.) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
}}}


= Working with sources = 

 * [Installation Install latest version] from update site to get all required libraries
 * Check out the [http://code.google.com/p/q4e/source sources] from Subversion
 * Import all existing projects in your Eclipse workspace.
   * At this point, org.devzuz.q.buckminster.maven might display build errors. You can safely ignore them (or close the project).

Then you can do your changes and run with

 * Run - open debug dialog
 * Right click on Eclipse application, select New
 * Give it a name
 * In the plugin tabs make sure all the org.devzuz.q plugins are checked in the Workspace section and unchecked in the Target platform section
 * Click the Debug button

A new Eclipse instance is launched with all the plugins you checked, including the Q ones built from sources


= Making a release =

 * change all versions x.y.z.qualifier to x2.y2.z2.qualifier, where x2.y2.z2 is the new version to release
  * this probably happens right after making the previous release
  * to change all plugin versions at a time you can go to the feature, set the new version, and in the plugins tab click on versions and force feature version into plugins
 * in the update site project http://q4e.googlecode.com/svn/trunk/updatesite/ 
  * Add the features with the new versions you set (x2.y2.z2.qualifier)
  * click build in each of the new features (or alternatively click build all)
 * tag sources
 * the update site now has the new plugins

 