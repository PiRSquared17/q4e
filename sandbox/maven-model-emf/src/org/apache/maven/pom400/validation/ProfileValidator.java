/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.apache.maven.pom400.validation;

import org.apache.maven.pom400.Activation;
import org.apache.maven.pom400.BuildBase;
import org.apache.maven.pom400.DependenciesType2;
import org.apache.maven.pom400.DependencyManagement;
import org.apache.maven.pom400.DistributionManagement;
import org.apache.maven.pom400.ModulesType1;
import org.apache.maven.pom400.PluginRepositoriesType1;
import org.apache.maven.pom400.PropertiesType1;
import org.apache.maven.pom400.Reporting;
import org.apache.maven.pom400.ReportsType2;
import org.apache.maven.pom400.RepositoriesType1;

/**
 * A sample validator interface for {@link org.apache.maven.pom400.Profile}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ProfileValidator {
	boolean validate();

	boolean validateId(String value);
	boolean validateActivation(Activation value);
	boolean validateBuild(BuildBase value);
	boolean validateModules(ModulesType1 value);
	boolean validateRepositories(RepositoriesType1 value);
	boolean validatePluginRepositories(PluginRepositoriesType1 value);
	boolean validateDependencies(DependenciesType2 value);
	boolean validateReports(ReportsType2 value);
	boolean validateReporting(Reporting value);
	boolean validateDependencyManagement(DependencyManagement value);
	boolean validateDistributionManagement(DistributionManagement value);
	boolean validateProperties(PropertiesType1 value);
}
